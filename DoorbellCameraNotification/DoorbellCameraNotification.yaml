blueprint:
  name: Doorbell Camera Notification with Door Opener
  description: >
    Blueprint for automation that sends actionable notification with camera snapshot
    when doorbell is pressed. The notification includes a photo from the specified camera
    and has an action button to open the door. Clicking on the notification itself
    opens the specified dashboard view. Snapshots are stored in config/www/doorbell folder.
  domain: automation
  input:
    doorbell_trigger:
      name: Doorbell Trigger Entity
      description: Entity that triggers the doorbell notification (e.g., switch, binary_sensor, button)
      selector:
        entity: {}
    
    doorbell_camera:
      name: Doorbell Camera
      description: Camera entity to take snapshot from
      selector:
        entity:
          domain: camera
          multiple: false
    
    notification_target:
      name: Notification Target
      description: >
        Device or group to send notification to (e.g., notify.mobile_app_iphone, notify.all_mobile)
      selector:
        text:
          type: text
    
    notification_title:
      name: Notification Title
      description: Title for the notification
      default: "Someone is at the door!"
      selector:
        text:
          type: text
    
    dashboard_view:
      name: Dashboard View
      description: Dashboard path to open when notification is clicked
      default: "/dashboard-home/eingang"
      selector:
        text:
          type: text
    
    door_opener_action:
      name: Door Opener Action
      description: Action to perform when "Open Door" button is pressed
      default: []
      selector:
        action: {}
    
    door_button_title:
      name: Door Button Title
      description: Title for the door opener button
      default: "Open Door"
      selector:
        text:
          type: text
    
    notification_sound:
      name: Notification Sound (iOS)
      description: Sound file for iOS notifications
      default: "US-EN-Morgan-Freeman-Someone-Is-Arriving.wav"
      selector:
        text:
          type: text
    
    notification_channel:
      name: Notification Channel (Android)
      description: >
        Android notification channel name. Different channels can have different sounds
        set in Android settings (Settings > Companion app > Notification channels)
      default: "doorbell_alerts"
      selector:
        text:
          type: text
    
    action_timeout:
      name: Action Timeout
      description: Time in seconds during which the notification actions are active
      default: 60
      selector:
        number:
          min: 10
          max: 300
          unit_of_measurement: seconds
          mode: slider
          step: 5
    
    kiosk_tablets:
      name: Fully Kiosk Tablets (Optional)
      description: Select Fully Kiosk tablets to redirect to dashboard when doorbell rings
      default: []
      selector:
        entity:
          domain: media_player
          integration: fully_kiosk
          multiple: true
    
    kiosk_dashboard_url:
      name: Kiosk Dashboard URL
      description: Dashboard URL to display on tablets when doorbell rings (e.g., https://your.hass.io/dashboard-home/entrance)
      default: "https://your.hass.io"
      selector:
        text:
          type: text
    
    kiosk_normal_url:
      name: Normal Start URL
      description: Normal start URL to return to after timeout (e.g., https://your.hass.io/dashboard-home)
      default: "https://your.hass.io"
      selector:
        text:
          type: text
    
    kiosk_return_timeout:
      name: Kiosk Return Timeout
      description: Time in seconds before tablets return to normal URL (0 = no auto-return)
      default: 30
      selector:
        number:
          min: 0
          max: 300
          unit_of_measurement: seconds
          mode: slider
          step: 5
    
    kiosk_wake_screen:
      name: Wake Tablet Screens
      description: Wake up tablet screens when doorbell rings
      default: true
      selector:
        boolean:

    enable_persistent_notification:
      name: Enable Persistent Notification
      description: Show persistent notification in Home Assistant sidebar for all users
      default: true
      selector:
        boolean:

    persistent_notification_title:
      name: Persistent Notification Title
      description: Title for the persistent notification in the sidebar
      default: "🔔 Doorbell Alert"
      selector:
        text:
          type: text

    persistent_notification_auto_dismiss:
      name: Auto-dismiss Persistent Notification
      description: Automatically dismiss the persistent notification after specified time (0 = manual dismiss only)
      default: 300
      selector:
        number:
          min: 0
          max: 3600
          unit_of_measurement: seconds
          mode: slider
          step: 30

    persistent_notification_message:
      name: Persistent Notification Message
      description: Custom message for the persistent notification (use {{timestamp}} for the time)
      default: "Someone rang the doorbell at {{timestamp}}."
      selector:
        text:
          type: text
          multiline: true

    enable_debug_notifications:
      name: Enable Debug Notifications
      description: Show debug info if camera snapshot fails or is empty
      default: true
      selector:
        boolean:

    max_snapshots_keep:
      name: Maximum Snapshots to Keep
      description: Maximum number of snapshot files to keep (older files will be deleted, 0 = no cleanup)
      default: 10
      selector:
        number:
          min: 0
          max: 100
          step: 1

  source_url: https://github.com/your-repo/HomeAssistant/blob/main/DoorbellCameraNotification/DoorbellCameraNotification.yaml

variables:
  trigger_entity: !input doorbell_trigger
  kiosk_tablets: !input kiosk_tablets
  kiosk_url: !input kiosk_dashboard_url
  normal_url: !input kiosk_normal_url
  kiosk_timeout: !input kiosk_return_timeout
  wake_screens: !input kiosk_wake_screen
  enable_persistent: !input enable_persistent_notification
  persistent_title: !input persistent_notification_title
  persistent_dismiss_time: !input persistent_notification_auto_dismiss
  persistent_message: !input persistent_notification_message
  dashboard_url: !input dashboard_view
  enable_debug: !input enable_debug_notifications
  max_snapshots: !input max_snapshots_keep

trigger:
  - entity_id: !input doorbell_trigger
    from: "off"
    to: "on"
    trigger: state

condition: []

action:
  - alias: "Set up variables for the actions"
    variables:
      action_open_door: "{{ 'OPEN_DOOR_' ~ context.id }}"
      current_time: "{{ now() }}"
      timestamp_string: "{{ as_timestamp(current_time) | timestamp_custom('%Y-%m-%d_%H-%M-%S') }}"
      image_file: "/local/doorbell/{{ timestamp_string }}.jpg"
      timestamp_display: "{{ as_timestamp(current_time) | timestamp_custom('%d.%m.%Y %H:%M', true) }}"
      notification_id: "doorbell_{{ as_timestamp(current_time) | timestamp_custom('%Y%m%d_%H%M%S') }}"
  
  - alias: "Take camera snapshot"
    data_template:
      entity_id: !input doorbell_camera
      filename: "/config/www/doorbell/{{ timestamp_string }}.jpg"
    action: camera.snapshot
  
  - alias: "Wait for snapshot to be saved"
    delay:
      seconds: 1
  
  - alias: "Create debug notification with camera info"
    if:
      - condition: template
        value_template: "{{ enable_debug }}"
    then:
      - action: persistent_notification.create
        data:
          title: "🐛 Doorbell Debug Info"
          message: >-
            📸 **Snapshot Created**: {{ timestamp_display }}
            🗂️ **File**: {{ snapshot_filename }}
            📷 **Camera**: {{ camera_entity }}
            📊 **Camera State**: {{ states(camera_entity) }}
            🔍 **Camera Available**: {{ states(camera_entity) not in ['unavailable', 'unknown', 'none'] }}
            
            **If snapshot is empty, check:**
            - Camera entity is available (not 'unavailable' or 'unknown')
            - Camera has network connectivity
            - Camera authentication is working
            - File permissions: /config/www/doorbell/ is writable
            
            **Manual cleanup**: Keep only {{ max_snapshots }} newest files in /config/www/doorbell/
          notification_id: "doorbell_debug_{{ as_timestamp(current_time) | timestamp_custom('%Y%m%d_%H%M%S') }}"
        continue_on_error: true
  
  - alias: "Send notification with actions"
    action: !input notification_target
    data:
      title: !input notification_title
      message: "{{ timestamp_display }}"
      data:
        push:
          sound: !input notification_sound
        channel: !input notification_channel
        ttl: 0
        priority: high
        image: "{{ image_file }}"
        clickAction: "{{ dashboard_url }}"
        actions:
          - action: "{{ action_open_door }}"
            title: !input door_button_title
  
  - alias: "Create persistent notification"
    if:
      - condition: template
        value_template: "{{ enable_persistent }}"
    then:
      - action: persistent_notification.create
        data:
          title: "{{ persistent_title }}"
          message: >-
            {{ persistent_message.replace('{{timestamp}}', timestamp_display) }}
            
            ![Doorbell Camera]({{ image_file }})
            
            📸 **Direct Link:** {{ image_file }}
            🏠 [Open Dashboard]({{ dashboard_url }})
          notification_id: "{{ notification_id }}"
  
  - alias: "Wake and redirect Fully Kiosk tablets"
    if:
      - condition: template
        value_template: "{{ kiosk_tablets | length > 0 }}"
    then:
      - repeat:
          for_each: "{{ kiosk_tablets }}"
          sequence:
            - variables:
                tablet_name: "{{ repeat.item.split('.')[1] }}"
                screen_switch: "switch.{{ tablet_name }}_bildschirm"
            
            - if:
                - condition: template
                  value_template: "{{ wake_screens }}"
              then:
                - alias: "Turn on tablet screen"
                  action: switch.turn_on
                  target:
                    entity_id: "{{ screen_switch }}"
                    
            - action: fully_kiosk.load_url
              data:
                device_id: "{{ device_id(repeat.item) }}"
                url: "{{ kiosk_url }}"
  
  - alias: "Wait for door opener action"
    wait_for_trigger:
      - event_type: mobile_app_notification_action
        event_data:
          action: "{{ action_open_door }}"
        trigger: event
    timeout: !input action_timeout
    continue_on_timeout: true
  
  - alias: "Execute door opener action if triggered"
    if:
      - condition: template
        value_template: "{{ wait.trigger.event.data.action == action_open_door }}"
    then: !input door_opener_action
  
  - alias: "Return tablets to normal view"
    if:
      - condition: template
        value_template: "{{ kiosk_tablets | length > 0 and kiosk_timeout > 0 }}"
    then:
      - delay:
          seconds: "{{ kiosk_timeout }}"
      - repeat:
          for_each: "{{ kiosk_tablets }}"
          sequence:
            - variables:
                tablet_name: "{{ repeat.item.split('.')[1] }}"
                
            - action: fully_kiosk.load_url
              data:
                device_id: "{{ device_id(repeat.item) }}"
                url: "{{ normal_url }}"

  - alias: "Auto-dismiss persistent notification"
    if:
      - condition: template
        value_template: "{{ enable_persistent and persistent_dismiss_time > 0 }}"
    then:
      - delay:
          seconds: "{{ persistent_dismiss_time }}"
      - action: persistent_notification.dismiss
        data:
          notification_id: "{{ notification_id }}"

mode: single 