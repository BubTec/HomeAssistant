blueprint:
  name: "Light/Switch Synchronization"
  description: "Synchronizes multiple lights or switches with a master device. When the master is controlled, all slave devices follow the same state."
  domain: automation
  input:
    master_device:
      name: "Master Device"
      description: "The main light or switch that controls all others"
      selector:
        entity:
          domain:
            - light
            - switch
    
    slave_devices:
      name: "Slave Devices"
      description: "List of lights or switches that should follow the master device"
      selector:
        target:
          entity:
            domain:
              - light
              - switch

trigger:
  - platform: state
    entity_id: !input master_device

condition:
  - condition: not
    conditions:
      - condition: template
        value_template: "{{ trigger.entity_id in !input slave_devices }}"

action:
  - choose:
      # Master turned on
      - conditions:
          - condition: state
            entity_id: !input master_device
            state: "on"
        sequence:
          - service: light.turn_on
            target: !input slave_devices
      
      # Master turned off
      - conditions:
          - condition: state
            entity_id: !input master_device
            state: "off"
        sequence:
          - service: light.turn_off
            target: !input slave_devices 